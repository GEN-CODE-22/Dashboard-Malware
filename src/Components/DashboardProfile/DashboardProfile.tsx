import { Dialog, Popover, Transition } from "@headlessui/react";
import { MenuAlt2Icon, XIcon } from "@heroicons/react/outline";
import Head from "next/head";
import React, { FC, Fragment, useState } from "react";
import { ItemProfile } from "./ItemProfile";
import { Navbar } from "./Navbar";

interface Props {
  children: React.ReactNode | React.ReactNode[];
  label?: string;
}

export const DashboardProfile: FC<Props> = ({ children, label = "" }) => {
  const [sidebarOpen, setSidebarOpen] = useState(false);

  return (
    <>
      <Head>
        <title>{label}</title>
      </Head>

      <div className="max-w-full overflow-hidden">
        {/* Header Movil */}
        <Popover className="flex overflow-hidden max-w-full ">
          <Transition.Root show={sidebarOpen} as={Fragment}>
            <Dialog
              as="div"
              className="fixed inset-0 z-40 flex md:hidden"
              onClose={setSidebarOpen}
            >
              <Transition.Child
                as={Fragment}
                enter="transition-opacity ease-linear duration-300"
                enterFrom="opacity-0"
                enterTo="opacity-100"
                leave="transition-opacity ease-linear duration-300"
                leaveFrom="opacity-100"
                leaveTo="opacity-0"
              >
                <Dialog.Overlay className="fixed inset-0 bg-gray-600/20 bg-opacity-75" />
              </Transition.Child>
              <Transition.Child
                as={Fragment}
                enter="transition ease-in-out duration-300 transform"
                enterFrom="-translate-x-full"
                enterTo="translate-x-0"
                leave="transition ease-in-out duration-300 transform"
                leaveFrom="translate-x-0"
                leaveTo="-translate-x-full"
              >
                <div className="relative max-w-xs w-full bg-darked pt-5 flex-1 flex flex-col">
                  <Transition.Child
                    as={Fragment}
                    enter="ease-in-out duration-300"
                    enterFrom="opacity-0"
                    enterTo="opacity-100"
                    leave="ease-in-out duration-300"
                    leaveFrom="opacity-100"
                    leaveTo="opacity-0"
                  >
                    <div className="absolute top-0 right-0 -mr-14 p-1">
                      <button
                        type="button"
                        className="h-12 w-12 rounded-full flex items-center justify-center focus:outline-none focus:bg-darked"
                        onClick={() => setSidebarOpen(false)}
                      >
                        <XIcon
                          className="h-6 w-6 text-white"
                          aria-hidden="true"
                        />
                        <span className="sr-only">Close sidebar</span>
                      </button>
                    </div>
                  </Transition.Child>

                  <div className="flex-1  overflow-y-auto -mt-5">
                    <Navbar />
                  </div>
                </div>
              </Transition.Child>
              <div className="flex-shrink-0 w-14" aria-hidden="true">
                <h1>Cl</h1>
              </div>
            </Dialog>
          </Transition.Root>
        </Popover>

        {/* Header Web */}
        <aside className="fixed hidden  h-full top-0 left-0  md:flex lg:flex flex-shrink-0 flex-col w-64 transition-width duration-75">
          <Navbar />
        </aside>

        {/* Children */}
        <div className="h-full max-w-full  bg-gray-50 relative overflow-y-auto md:ml-64 ">
          <div className="md:max-w-6xl  lg:max-w-7xl xl:max-w-full mx-auto  flex flex-col  xl:px-0 static z-10">
            <div className="w-full  md:hidden top-0 shadow  flex-shrink-0 h-16 bg-darked border-b border-gray-200 flex fixed z-30">
              <button
                type="button"
                className="border-r border-white px-4 text-white focus:outline-none focus:ring-2 focus:ring-inset md:hidden"
                onClick={() => setSidebarOpen(true)}
              >
                <span className="sr-only">Open sidebar</span>
                <MenuAlt2Icon className="h-6 w-6" aria-hidden="true" />
              </button>
            </div>
            <div className="hidden bg-white pr-10  md:w-11/12  xl:w-full max-w-full md:flex flex-col justify-center  fixed z-30 h-20 border-b-2 border-gray-700 mx-auto">
              <div className="flex justify-between px-2 flex-wrap ">
                <div className="w-1/3  flex justify-center md:mr-[5rem] ">
                  <ItemProfile />
                </div>
              </div>
            </div>

            <main className="flex-1 relative pt-12 md:pt-24 z-0 overflow-y-auto focus:outline-none ">
              {children}
            </main>
          </div>
        </div>
      </div>
    </>
  );
};
