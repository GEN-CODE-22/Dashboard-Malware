import { Slider } from "@mui/material";
import { useField } from "formik";
import React, { FC } from "react";

interface Props {
  label: string;
  name: string;
  [x: string]: any;
  className?: string;
}

export const MySlider: FC<Props> = ({
  label,
  disable = false,
  className,
  ...props
}) => {
  const [field, meta] = useField(props);
  return (
    <Slider
      {...field}
      {...props}
      sx={{
        height: 2,
        padding: "15px 0",
        color: "#2188e4",
        "& .MuiSlider-thumb": {
          height: 28,
          width: 28,
          backgroundColor: "#fff",
          boxShadow:
            "0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)",
          "&:focus, &:hover, &.Mui-active": {
            boxShadow:
              "0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)",
            // Reset on touch devices, it doesn't add specificity
            "@media (hover: none)": {
              boxShadow:
                "0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)",
            },
          },
        },
        "& .MuiSlider-valueLabel": {
          fontSize: 12,
          fontWeight: "normal",
          top: -1,
          backgroundColor: "unset",
          //   color: theme.palette.text.primary,
          "&:before": {
            display: "none",
          },
          "& *": {
            background: "transparent",
            color: "#2188e4",
          },
        },
        "& .MuiSlider-track": {
          border: "none",
        },
        "& .MuiSlider-rail": {
          opacity: 0.5,
          backgroundColor: "#bfbfbf",
        },
        "& .MuiSlider-mark": {
          backgroundColor: "#bfbfbf",
          height: 8,
          //         width: 1,
          "&.MuiSlider-markActive": {
            opacity: 1,
            backgroundColor: "#2188e4",
          },
        },
      }}
    />
  );
};
